# COMMANDE !averto2

@bot.command()
async def averto2(ctx, member: discord.Member = None, *, reason: str = None):
    # Obtenir la date et l'heure actuelles au format souhait√© et au fuseau horaire Europe/Paris
    paris_timezone = pytz.timezone('Europe/Paris')
    current_datetime = datetime.now(paris_timezone).strftime("%A %d %B %Y √† %H:%M")

    # Remplacer le nom du jour de la semaine en anglais par la traduction fran√ßaise
    for day_en, day_fr in jours_de_la_semaine_fr.items():
        current_datetime = current_datetime.replace(day_en, day_fr)

    # Remplacer le nom du mois en anglais par la traduction fran√ßaise
    for month_en, month_fr in mois_fr.items():
        current_datetime = current_datetime.replace(month_en, month_fr)

    # Liste des IDs de r√¥les requis pour ex√©cuter la commande
    roles_requis_ids = [1144691704809660506, 1144692216212754452, 1144692338443157555, 1144691706869072065]  # Ajout des IDs r√©els des r√¥les

    # V√©rifier si l'utilisateur poss√®de l'un des r√¥les requis
    possede_role_requis = any(role.id in roles_requis_ids for role in ctx.author.roles)
    if not possede_role_requis:
        await ctx.send("üö´ Vous n'avez pas la permission d'ex√©cuter cette commande.")
        return

    # V√©rifier si un utilisateur a √©t√© mentionn√©
    if member is None:
        await ctx.send("‚ö†Ô∏è Veuillez mentionner un utilisateur.")
        return

    # V√©rifier si la raison a √©t√© sp√©cifi√©e
    if reason is None or reason.strip() == "":
        await ctx.send("‚ö†Ô∏è Veuillez sp√©cifier une raison pour l'avertissement.")
        return

    # R√©cup√©rer l'ic√¥ne du serveur
    server_icon_url = ctx.guild.icon.url

    # Cr√©ation de l'embed
    embed = discord.Embed(
        title="‚õîÔ∏è Avertissement de niveau 2 ‚õîÔ∏è",
        description=f"üõë **Avertissement pour {member.mention}** üõë",
        color=discord.Color.orange()
    )

    # Ajout du thumbnail (l'ic√¥ne de l'utilisateur)
    if member.avatar:
        embed.set_thumbnail(url=member.avatar.url)

    # Ajout de champs √† l'embed
    embed.add_field(name="üìã Raison", value=reason)  # Utilisation de la raison sp√©cifi√©e par l'utilisateur
    embed.add_field(name="üí° Donn√© par", value=ctx.author.mention)
    embed.add_field(name="‚è∞ Date et Heure", value=current_datetime)

    # Ajout du r√¥le ajout√©
    role_id = 1145145385879355564  # ID du r√¥le
    role = discord.utils.get(ctx.guild.roles, id=role_id)
    if role:
        embed.add_field(name="üë• R√¥le ajout√©", value=role.mention)

    # Ajout du footer avec l'ic√¥ne du serveur
    embed.set_footer(text="Ls Tuning", icon_url=server_icon_url)

    # Envoi de l'embed
    message = await ctx.send(embed=embed)

    # R√©cup√©ration du canal sp√©cifique
    canal_specifique_id = 1144696836825829417  # ID du canal sp√©cifique
    canal_specifique = bot.get_channel(canal_specifique_id)
    
    # Envoi de l'embed dans le canal sp√©cifique s'il existe
    if canal_specifique:
        await canal_specifique.send(embed=embed)

    # Attribution du r√¥le sp√©cifique √† l'utilisateur
    role_id = 1145145385879355564  # ID du r√¥le
    role = discord.utils.get(ctx.guild.roles, id=role_id)
    if role:
        await member.add_roles(role)

    # Supprimer la commande apr√®s son envoi
    await ctx.message.delete()

# COMMANDE !averto3

@bot.command()
async def averto3(ctx, member: discord.Member = None, *, reason: str = None):
    # Obtenir la date et l'heure actuelles au format souhait√© et au fuseau horaire Europe/Paris
    paris_timezone = pytz.timezone('Europe/Paris')
    current_datetime = datetime.now(paris_timezone).strftime("%A %d %B %Y √† %H:%M")

    # Remplacer le nom du jour de la semaine en anglais par la traduction fran√ßaise
    for day_en, day_fr in jours_de_la_semaine_fr.items():
        current_datetime = current_datetime.replace(day_en, day_fr)

    # Remplacer le nom du mois en anglais par la traduction fran√ßaise
    for month_en, month_fr in mois_fr.items():
        current_datetime = current_datetime.replace(month_en, month_fr)

    # Liste des IDs de r√¥les requis pour ex√©cuter la commande
    roles_requis_ids = [1144691704809660506, 1144692216212754452, 1144692338443157555, 1144691706869072065]  # Ajout des IDs r√©els des r√¥les

    # V√©rifier si l'utilisateur poss√®de l'un des r√¥les requis
    possede_role_requis = any(role.id in roles_requis_ids for role in ctx.author.roles)
    if not possede_role_requis:
        await ctx.send("üö´ Vous n'avez pas la permission d'ex√©cuter cette commande.")
        return

    # V√©rifier si un utilisateur a √©t√© mentionn√©
    if member is None:
        await ctx.send("‚ö†Ô∏è Veuillez mentionner un utilisateur.")
        return

    # V√©rifier si la raison a √©t√© sp√©cifi√©e
    if reason is None or reason.strip() == "":
        await ctx.send("‚ö†Ô∏è Veuillez sp√©cifier une raison pour l'avertissement.")
        return

    # R√©cup√©rer l'ic√¥ne du serveur
    server_icon_url = ctx.guild.icon.url

    # Cr√©ation de l'embed
    embed = discord.Embed(
        title="‚õîÔ∏è Avertissement de niveau 3 ‚õîÔ∏è",
        description=f"üõë **Avertissement pour {member.mention}** üõë",
        color=discord.Color.red()
    )

    # Ajout du thumbnail (l'ic√¥ne de l'utilisateur)
    if member.avatar:
        embed.set_thumbnail(url=member.avatar.url)

    # Ajout de champs √† l'embed
    embed.add_field(name="üìã Raison", value=reason)  # Utilisation de la raison sp√©cifi√©e par l'utilisateur
    embed.add_field(name="üí° Donn√© par", value=ctx.author.mention)
    embed.add_field(name="‚è∞ Date et Heure", value=current_datetime)

    # Ajout du r√¥le ajout√©
    role_id = 1145145411779186731  # ID du r√¥le
    role = discord.utils.get(ctx.guild.roles, id=role_id)
    if role:
        embed.add_field(name="üë• R√¥le ajout√©", value=role.mention)

    # Ajout du footer avec l'ic√¥ne du serveur
    embed.set_footer(text="Ls Tuning", icon_url=server_icon_url)

    # Envoi de l'embed
    message = await ctx.send(embed=embed)

    # R√©cup√©ration du canal sp√©cifique
    canal_specifique_id = 1144696836825829417  # ID du canal sp√©cifique
    canal_specifique = bot.get_channel(canal_specifique_id)
    
    # Envoi de l'embed dans le canal sp√©cifique s'il existe
    if canal_specifique:
        await canal_specifique.send(embed=embed)

    # Attribution du r√¥le sp√©cifique √† l'utilisateur
    role_id = 1145145411779186731  # ID du r√¥le
    role = discord.utils.get(ctx.guild.roles, id=role_id)
    if role:
        await member.add_roles(role)

    # Supprimer la commande apr√®s son envoi
    await ctx.message.delete()


# COMMANDE !verif

@bot.command()
async def suppreact(ctx):
    # Supprimez la commande !suppreact
    await ctx.message.delete()

    async with ctx.typing():  # Indiquez que le bot est en train d'√©crire
        async for message in ctx.channel.history(limit=None):
            # V√©rifiez si le message a des r√©actions en forme de croix rouge ajout√©es par le bot
            for reaction in message.reactions:
                if str(reaction.emoji) == "‚ùå" and reaction.me:
                    await reaction.remove(bot.user)

    await ctx.send("Toutes les r√©actions ‚ùå ont √©t√© supprim√©es.")

@bot.command()
async def verif(ctx):
    # Supprimez la commande !verif
    await ctx.message.delete()

    async with ctx.typing():  # Indiquez que le bot est en train d'√©crire
        error_count = 0  # Variable pour suivre le nombre d'erreurs trouv√©es

        async for message in ctx.channel.history(limit=None):
            # Fonction pour v√©rifier si une cha√Æne contient des espaces entre les chiffres
            def has_spaces_between_digits(s):
                import re
                return re.search(r'\d\s+\d', s) is not None

            # Fonction pour v√©rifier si une cha√Æne contient des symboles non autoris√©s
            def has_invalid_symbols(s):
                import re
                return re.search(r'[^0-9\s]', s) is not None

            # Ignorer les messages qui ne sont pas des montants
            if not any(char.isdigit() for char in message.content):
                continue

            # Ignorer les messages contenant des mentions d'utilisateurs
            if message.mentions:
                continue

            if has_spaces_between_digits(message.content) or has_invalid_symbols(message.content):
                # Incr√©mente le compteur d'erreurs
                error_count += 1

                # Cr√©ez un nouvel embed pour chaque erreur num√©rot√©e
                error_embed = discord.Embed(
                    title=f"Erreur #{error_count} dans le Montant",
                    color=discord.Color.red()
                )
                error_embed.description = f"‚ùå [Cliquez ici pour acc√©der √† l'erreur]({message.jump_url})"
                await message.add_reaction("‚ùå")

                # Ajoute le logo du serveur √† l'ic√¥ne du footer
                error_embed.set_footer(text="By Icalea's Bot", icon_url=ctx.guild.icon.url)

                # Envoyez l'embed d'erreur num√©rot√©
                await ctx.send(embed=error_embed)
            else:
                # Si le message n'a pas d'erreurs, v√©rifiez s'il a d√©j√† la r√©action croix rouge
                for reaction in message.reactions:
                    if str(reaction.emoji) == "‚ùå":
                        # Supprimez la r√©action croix rouge
                        await reaction.remove(bot.user)

        # Envoyez un message de validation global si aucune erreur n'a √©t√© trouv√©e
        if error_count == 0:
            success_embed = discord.Embed(
                title="Tout est valid√© ! ‚úÖüéâ",
                color=discord.Color.green()
            )

            # Ajoute quelques emojis pour le plaisir
            success_embed.set_image(url="https://i.imgur.com/your_image_url_here.png")

            # Ajoute le logo du serveur √† l'ic√¥ne de l'embed de succ√®s
            success_embed.set_thumbnail(url=ctx.guild.icon.url)

            # Ajoute le logo du serveur au footer
            success_embed.set_footer(text="By Icalea's Bot", icon_url=ctx.guild.icon.url)

            await ctx.send(embed=success_embed)



# Commande personnalis√©e pour le salaire
@bot.command()
async def salaire(ctx, argument1, argument2):
    # V√©rifie si l'utilisateur a le r√¥le autoris√©
    role = discord.utils.get(ctx.author.roles, id=role_id_autorise)
    
    if role is not None:
        # V√©rifie si les arguments sont pr√©sents
        if argument1 is None or argument2 is None:
            await ctx.send("Veuillez fournir tous les arguments n√©cessaires : `!salaire @utilisateur Montant`")
        else:
            # Les arguments sont pr√©sents, envoie l'embed dans le canal sp√©cifi√©
            await envoyer_embed_2(ctx, argument1, argument2)
            # Envoie le message en gras avec des emojis imposants dans le canal de la commande
            await envoyer_message_paye(ctx, argument1)
            await ctx.message.delete()  # Supprime la commande
    else:
        await ctx.send("Vous n'avez pas la permission d'utiliser cette commande.")

@bot.command()
async def vire(ctx, member: discord.Member = None):
    
    # V√©rifie si l'utilisateur a le r√¥le autoris√©
    role = discord.utils.get(ctx.author.roles, id=role_id_autorise)
    if role is None:
        await ctx.send("Vous n'avez pas le r√¥le autoris√© pour ex√©cuter cette commande.")
        return

    # Cr√©e un objet de fuseau horaire Europe/Paris
    paris_timezone = pytz.timezone('Europe/Paris')

    # Obtient la date et l'heure actuelles en Europe/Paris
    paris_now = datetime.now(paris_timezone)

    # Liste des 9 ID de r√¥les √† supprimer
    roles_to_remove_ids = [
        1145107760485244970,  # ROLE_ID_1
        1144691712632049815,  # ROLE_ID_2
        1144691710669095012,  # ROLE_ID_3
        1144691708655829053,  # ROLE_ID_4
        1144691706869072065,  # ROLE_ID_5
        1144692338443157555,  # ROLE_ID_6
        1144692216212754452,  # ROLE_ID_7
        1144691704809660506,  # ROLE_ID_8
        1145145376828035214,  # ROLE_ID_9
        1145145385879355564,  # ROLE_ID_10
        1145145411779186731,  # ROLE_ID_11
        1145115765041799220   # ROLE_ID_12
    ]

    if member is None:
        await ctx.send("Veuillez mentionner un utilisateur.")
        return

    # R√©cup√®re les r√¥les sp√©cifi√©s par leur ID
    roles_to_remove = [role for role in member.roles if role.id in roles_to_remove_ids]

    # V√©rifie si l'utilisateur poss√®de les r√¥les sp√©cifi√©s
    if roles_to_remove:
        # Supprime les r√¥les sp√©cifi√©s
        await member.remove_roles(*roles_to_remove)

        # Cr√©e un emoji de licenciement
        fire_emoji = "üî•"

        # Cr√©e un embed de licenciement pour le canal actuel
        embed = discord.Embed(
            title=f"{fire_emoji} Fiche de Licenciement {fire_emoji}",
            description=f"{member.mention} a √©t√© licenci√© du Ls Tuning.",
            color=discord.Color.red()
        )
      
        # V√©rifie si l'avatar est disponible
        if member.avatar:
            embed.set_thumbnail(url=member.avatar.url)
          
        embed.add_field(name="Nom de l'employ√©", value=member.display_name, inline=True)
        embed.add_field(name="Licenci√© par", value=ctx.author.mention, inline=True)
        embed.add_field(name="Date et heure du licenciement", value=paris_now.strftime("%Y-%m-%d %H:%M:%S"), inline=False)
        embed.add_field(name="R√¥les supprim√©s", value=', '.join([role.mention for role in roles_to_remove]), inline=False)
        embed.set_footer(text="Ls Tuning", icon_url=ctx.guild.icon.url) 

        # Envoie l'embed dans le m√™me canal
        message = await ctx.send(embed=embed)

        # R√©cup√®re le canal avec l'ID sp√©cifique
        specific_channel_id = 1144704482232508466
        specific_channel = bot.get_channel(specific_channel_id)

        if specific_channel:
            # Cr√©e un emoji de licenciement
            hammer_emoji = "üî®"

            # Cr√©e un embed de licenciement pour le canal sp√©cifique
            specific_embed = discord.Embed(
                title=f"{hammer_emoji} Fiche de Licenciement {hammer_emoji}",
                description=f"{member.mention} a √©t√© licenci√© du Ls Tuning.",
                color=discord.Color.red()
            )
          
            # V√©rifie si l'avatar est disponible
            if member.avatar:
                specific_embed.set_thumbnail(url=member.avatar.url)

            specific_embed.add_field(name="Nom de l'employ√©", value=member.display_name, inline=True)
            specific_embed.add_field(name="Licenci√© par", value=ctx.author.mention, inline=True)
            specific_embed.add_field(name="Date et heure du licenciement", value=paris_now.strftime("%Y-%m-%d %H:%M:%S"), inline=False)
            specific_embed.add_field(name="R√¥les supprim√©s", value=', '.join([role.mention for role in roles_to_remove]), inline=False)
            specific_embed.set_footer(text="Ls Tuning", icon_url=ctx.guild.icon.url) 

            # Envoie l'embed dans le canal sp√©cifique
            await specific_channel.send(embed=specific_embed)
        else:
            print(f"Canal avec l'ID {specific_channel_id} non trouv√©.")

        # Supprime la commande
        await ctx.message.delete()
    else:
        await ctx.send(f"{member.mention} ne poss√®de pas les r√¥les sp√©cifi√©s.")

# !mecano

@bot.command()
async def mecano(ctx, member: discord.Member = None):
    # V√©rifie si un membre est mentionn√©
    if member is None:
        await ctx.send("Veuillez mentionner un utilisateur.")
        return

    # Cr√©e un objet de fuseau horaire Europe/Paris
    paris_timezone = pytz.timezone('Europe/Paris')

    # Obtient la date et l'heure actuelles en Europe/Paris
    paris_now = datetime.now(paris_timezone)

    # R√¥le √† supprimer
    role_id_a_supprimer = 1144691712632049815  # ID du r√¥le √† supprimer
    role_id_a_ajouter = 1144691710669095012  # ID du r√¥le √† ajouter

    # V√©rifie si l'utilisateur a le r√¥le autoris√©
    role_id_autorise = 1144692338443157555  # ID du r√¥le autoris√©
    role = discord.utils.get(ctx.author.roles, id=role_id_autorise)

    # V√©rifie si l'utilisateur mentionn√© poss√®de le r√¥le √† supprimer
    if discord.utils.get(member.roles, id=role_id_a_supprimer):
        if role:
            # Supprime le r√¥le sp√©cifi√©
            role_a_supprimer = discord.utils.get(ctx.guild.roles, id=role_id_a_supprimer)
            await member.remove_roles(role_a_supprimer)

            # Ajoute le r√¥le sp√©cifi√©
            role_a_ajouter = discord.utils.get(ctx.guild.roles, id=role_id_a_ajouter)
            await member.add_roles(role_a_ajouter)

            # Calcul du nouveau pourcentage de salaire
            pourcentage_salaire = 60  # Remplacez par le pourcentage appropri√©


            # Cr√©e un embed de fiche de promotion
            embed = discord.Embed(
                title="Fiche de Promotion üöÄ",
                description=f"üîß Promotion de {member.mention} üîß",
                color=discord.Color.gold()
            )
          
            # V√©rifie si l'avatar est disponible
            if member.avatar:
                embed.set_thumbnail(url=member.avatar.url)
              
            embed.add_field(name="Promu par üì£", value=ctx.author.mention, inline=True)
            embed.add_field(name="Date de la promotion üóìÔ∏è", value=paris_now.strftime("%Y-%m-%d %H:%M:%S"), inline=False)
            embed.add_field(name="Nouveau grade üÜô", value=role_a_ajouter.mention, inline=False)
            embed.add_field(name="Nouveau pourcentage de salaire üí∞", value=f"{pourcentage_salaire}%", inline=False)
            embed.set_footer(text="Ls Tuning üèÅ", icon_url=ctx.guild.icon.url)

            # Envoie l'embed dans le canal actuel
            await ctx.send(embed=embed)

            # Cr√©e un deuxi√®me embed de promotion pour le canal sp√©cifique
            specific_embed = discord.Embed(
                title="Fiche de Promotion üöÄ",
                description=f"üîß Promotion de {member.mention} üîß",
                color=discord.Color.gold()
            )
          
            # V√©rifie si l'avatar est disponible
            if member.avatar:
                specific_embed.set_thumbnail(url=member.avatar.url)

            specific_embed.add_field(name="Promu par üì£", value=ctx.author.mention, inline=True)
            specific_embed.add_field(name="Date de la promotion üóìÔ∏è", value=paris_now.strftime("%Y-%m-%d %H:%M:%S"), inline=False)
            specific_embed.add_field(name="Nouveau grade üÜô", value=role_a_ajouter.mention, inline=False)
            specific_embed.add_field(name="Nouveau pourcentage de salaire üí∞", value=f"{pourcentage_salaire}%", inline=False)
            specific_embed.set_footer(text="Ls Tuning üèÅ", icon_url=ctx.guild.icon.url)

            # R√©cup√®re le canal avec l'ID sp√©cifique et envoie le deuxi√®me embed
            specific_channel_id = 1144704482232508466
            specific_channel = bot.get_channel(specific_channel_id)
            if specific_channel:
                await specific_channel.send(embed=specific_embed)
            else:
                print(f"Canal avec l'ID {specific_channel_id} non trouv√©.")

            # Renomme le canal actuel
            await ctx.channel.edit(name=f"„Äåüîß„Äç{member.display_name}")

            # Supprime la commande
            await ctx.message.delete()
        else:
            await ctx.send("Vous n'avez pas l'autorisation d'utiliser cette commande.")
    else:
        await ctx.send(f"{member.mention} ne poss√®de pas le r√¥le √† supprimer.")

# !mecanoc

@bot.command()
async def mecanoc(ctx, member: discord.Member = None):
    # V√©rifie si un membre est mentionn√©
    if member is None:
        await ctx.send("Veuillez mentionner un utilisateur.")
        return

    # Cr√©e un objet de fuseau horaire Europe/Paris
    paris_timezone = pytz.timezone('Europe/Paris')

    # Obtient la date et l'heure actuelles en Europe/Paris
    paris_now = datetime.now(paris_timezone)

    # R√¥le √† supprimer
    role_id_a_supprimer = 1144691710669095012  # ID du r√¥le √† supprimer
    role_id_a_ajouter = 1144691708655829053  # ID du r√¥le √† ajouter

    # V√©rifie si l'utilisateur a le r√¥le autoris√©
    role_id_autorise = 1144692338443157555  # ID du r√¥le autoris√©
    role = discord.utils.get(ctx.author.roles, id=role_id_autorise)

    # V√©rifie si l'utilisateur mentionn√© poss√®de le r√¥le √† supprimer
    if discord.utils.get(member.roles, id=role_id_a_supprimer):
        if role:
            # Supprime le r√¥le sp√©cifi√©
            role_a_supprimer = discord.utils.get(ctx.guild.roles, id=role_id_a_supprimer)
            await member.remove_roles(role_a_supprimer)

            # Ajoute le r√¥le sp√©cifi√©
            role_a_ajouter = discord.utils.get(ctx.guild.roles, id=role_id_a_ajouter)
            await member.add_roles(role_a_ajouter)

            # Calcul du nouveau pourcentage de salaire
            pourcentage_salaire = 70  # Remplacez par le pourcentage appropri√©


            # Cr√©e un embed de fiche de promotion
            embed = discord.Embed(
                title="Fiche de Promotion üöÄ",
                description=f"üîß Promotion de {member.mention} üîß",
                color=discord.Color.gold()
            )
            
            # V√©rifie si l'avatar est disponible
            if member.avatar:
                embed.set_thumbnail(url=member.avatar.url)
              
            embed.add_field(name="Promu par üì£", value=ctx.author.mention, inline=True)
            embed.add_field(name="Date de la promotion üóìÔ∏è", value=paris_now.strftime("%Y-%m-%d %H:%M:%S"), inline=False)
            embed.add_field(name="Nouveau grade üÜô", value=role_a_ajouter.mention, inline=False)
            embed.add_field(name="Nouveau pourcentage de salaire üí∞", value=f"{pourcentage_salaire}%", inline=False)
            embed.set_footer(text="Ls Tuning üèÅ", icon_url=ctx.guild.icon.url)

            # Envoie l'embed dans le canal actuel
            await ctx.send(embed=embed)

            # Cr√©e un deuxi√®me embed de promotion pour le canal sp√©cifique
            specific_embed = discord.Embed(
                title="Fiche de Promotion üöÄ",
                description=f"üîß Promotion de {member.mention} üîß",
                color=discord.Color.gold()
            )
          
            # V√©rifie si l'avatar est disponible
            if member.avatar:
                specific_embed.set_thumbnail(url=member.avatar.url)
              
            specific_embed.add_field(name="Promu par üì£", value=ctx.author.mention, inline=True)
            specific_embed.add_field(name="Date de la promotion üóìÔ∏è", value=paris_now.strftime("%Y-%m-%d %H:%M:%S"), inline=False)
            specific_embed.add_field(name="Nouveau grade üÜô", value=role_a_ajouter.mention, inline=False)
            specific_embed.add_field(name="Nouveau pourcentage de salaire üí∞", value=f"{pourcentage_salaire}%", inline=False)
            specific_embed.set_footer(text="Ls Tuning üèÅ", icon_url=ctx.guild.icon.url)

            # R√©cup√®re le canal avec l'ID sp√©cifique et envoie le deuxi√®me embed
            specific_channel_id = 1144704482232508466
            specific_channel = bot.get_channel(specific_channel_id)
            if specific_channel:
                await specific_channel.send(embed=specific_embed)
            else:
                print(f"Canal avec l'ID {specific_channel_id} non trouv√©.")

            # Renomme le canal actuel
            await ctx.channel.edit(name=f"„Äåüî®„Äç{member.display_name}")

            # Supprime la commande
            await ctx.message.delete()
        else:
            await ctx.send("Vous n'avez pas l'autorisation d'utiliser cette commande.")
    else:
        await ctx.send(f"{member.mention} ne poss√®de pas le r√¥le √† supprimer.")

# !chef

@bot.command()
async def chef(ctx, member: discord.Member = None):
    # V√©rifie si un membre est mentionn√©
    if member is None:
        await ctx.send("Veuillez mentionner un utilisateur.")
        return

    # Cr√©e un objet de fuseau horaire Europe/Paris
    paris_timezone = pytz.timezone('Europe/Paris')

    # Obtient la date et l'heure actuelles en Europe/Paris
    paris_now = datetime.now(paris_timezone)

    # R√¥le √† supprimer
    role_id_a_supprimer = 1144691708655829053  # ID du r√¥le √† supprimer
    role_ids_a_ajouter = [1144691706869072065, 1145115765041799220]

    # Cr√©e une liste pour stocker les mentions de r√¥les
    mentions_roles = []

    # V√©rifie si l'utilisateur a le r√¥le autoris√©
    role_id_autorise = 1144692338443157555  # ID du r√¥le autoris√©
    role = discord.utils.get(ctx.author.roles, id=role_id_autorise)

    # V√©rifie si l'utilisateur mentionn√© poss√®de le r√¥le √† supprimer
    if discord.utils.get(member.roles, id=role_id_a_supprimer):
        if role:
            # Supprime le r√¥le sp√©cifi√©
            role_a_supprimer = discord.utils.get(ctx.guild.roles, id=role_id_a_supprimer)
            await member.remove_roles(role_a_supprimer)

            # Ajoute les mentions des r√¥les sp√©cifi√©s
            for role_id in role_ids_a_ajouter:
                role_a_ajouter = discord.utils.get(ctx.guild.roles, id=role_id)
                if role_a_ajouter:
                    mentions_roles.append(role_a_ajouter.mention)
                    await member.add_roles(role_a_ajouter)

            # Combine les mentions des r√¥les en une seule cha√Æne de caract√®res
            roles_mentions_str = ', '.join(mentions_roles)

            # Calcul du nouveau pourcentage de salaire
            pourcentage_salaire = 80  # Remplacez par le pourcentage appropri√©


            # Cr√©e un embed de fiche de promotion
            embed = discord.Embed(
                title="Fiche de Promotion üöÄ",
                description=f"üîß Promotion de {member.mention} üîß",
                color=discord.Color.gold()
            )
          
            # V√©rifie si l'avatar est disponible
            if member.avatar:
                embed.set_thumbnail(url=member.avatar.url)
              
            embed.add_field(name="Promu par üì£", value=ctx.author.mention, inline=True)
            embed.add_field(name="Date de la promotion üóìÔ∏è", value=paris_now.strftime("%Y-%m-%d %H:%M:%S"), inline=False)
            embed.add_field(name="Nouveau grade üÜô", value=roles_mentions_str, inline=False)
            embed.add_field(name="Nouveau pourcentage de salaire üí∞", value=f"{pourcentage_salaire}%", inline=False)
            embed.set_footer(text="Ls Tuning üèÅ", icon_url=ctx.guild.icon.url)

            # Envoie l'embed dans le canal actuel
            await ctx.send(embed=embed)

            # Cr√©e un deuxi√®me embed de promotion pour le canal sp√©cifique
            specific_embed = discord.Embed(
                title="Fiche de Promotion üöÄ",
                description=f"üîß Promotion de {member.mention} üîß",
                color=discord.Color.gold()
            )
          
            # V√©rifie si l'avatar est disponible
            if member.avatar:
                specific_embed.set_thumbnail(url=member.avatar.url)
              
            specific_embed.add_field(name="Promu par üì£", value=ctx.author.mention, inline=True)
            specific_embed.add_field(name="Date de la promotion üóìÔ∏è", value=paris_now.strftime("%Y-%m-%d %H:%M:%S"), inline=False)
            specific_embed.add_field(name="Nouveau grade üÜô", value=roles_mentions_str, inline=False)
            specific_embed.add_field(name="Nouveau pourcentage de salaire üí∞", value=f"{pourcentage_salaire}%", inline=False)
            specific_embed.set_footer(text="Ls Tuning üèÅ", icon_url=ctx.guild.icon.url)

            # R√©cup√®re le canal avec l'ID sp√©cifique et envoie le deuxi√®me embed
            specific_channel_id = 1144704482232508466
            specific_channel = bot.get_channel(specific_channel_id)
            if specific_channel:
                await specific_channel.send(embed=specific_embed)
            else:
                print(f"Canal avec l'ID {specific_channel_id} non trouv√©.")

            # Renomme le canal actuel
            await ctx.channel.edit(name=f"„Äåü™õ„Äç{member.display_name}")

            # Supprime la commande
            await ctx.message.delete()
        else:
            await ctx.send("Vous n'avez pas l'autorisation d'utiliser cette commande.")
    else:
        await ctx.send(f"{member.mention} ne poss√®de pas le r√¥le √† supprimer.")


# Commande pour renommer le canal textuel
@bot.command()
async def rename(ctx, argument1):
    # Ex√©cute la fonction pour renommer le canal avec l'argument1
    await rename_canal(ctx, argument1)

# Commande pour cr√©er un nouveau canal, le renommer et ajouter des r√¥les
@bot.command()
async def new(ctx, utilisateur: discord.Member = None):
    if utilisateur is None:
        await ctx.send("Veuillez mentionner un utilisateur : `!new @utilisateur`")
        return

    # Cr√©e un objet de fuseau horaire Europe/Paris
    paris_timezone = pytz.timezone('Europe/Paris')

    # Obtient la date et l'heure actuelles en Europe/Paris
    paris_now = datetime.now(paris_timezone)
    
    # Ex√©cute la fonction pour cr√©er le canal, le renommer et ajouter des r√¥les
    await creer_canal_et_roles(ctx, utilisateur)
    
    # Supprime la commande
    await ctx.message.delete()

# Personnalisez le message d'erreur pour les arguments manquants de la commande salaire
@salaire.error
async def salaire_error(ctx, error):
    if isinstance(error, commands.MissingRequiredArgument):
        await ctx.send("Veuillez fournir tous les arguments n√©cessaires : `!salaire @utilisateur Montant`")

# Personnalisez le message d'erreur pour les arguments manquants de la commande rename
@rename.error
async def rename_error(ctx, error):
    if isinstance(error, commands.MissingRequiredArgument):
        await ctx.send("Veuillez fournir un nom pour le canal : `!rename [Nom]`")

# Lancez le bot
bot.run(bot_token)
